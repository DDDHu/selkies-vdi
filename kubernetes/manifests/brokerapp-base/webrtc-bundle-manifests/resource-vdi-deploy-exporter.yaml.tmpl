# Google LLC 2019
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- if .AppParams.enableRecording }}
{{- if eq .AppParams.enableRecording "true"}}

apiVersion: v1
kind: ServiceAccount
metadata:
  name: {{.ServiceName}}-recording-exporter
  labels:
    app: {{.ServiceName}}-recording-exporter
  annotations:
    iam.gke.io/gcp-service-account: vdi-recording-exporter@{{.ProjectID}}.iam.gserviceaccount.com
---
apiVersion: iam.cnrm.cloud.google.com/v1beta1
kind: IAMPolicyMember
metadata:
  name: {{.ServiceName}}-recording-exporter-wi
spec:
  resourceRef:
    apiVersion: iam.cnrm.cloud.google.com/v1beta1
    kind: IAMServiceAccount
    external: projects/{{.ProjectID}}/serviceAccounts/vdi-recording-exporter@{{.ProjectID}}.iam.gserviceaccount.com
  member: serviceAccount:{{.ProjectID}}.svc.id.goog[{{.Namespace}}/{{.FullName}}-vdi-recording-exporter]
  role: roles/iam.workloadIdentityUser
---
apiVersion: v1
kind: Service
metadata:
  name: vdi-exporter
spec:
  selector:
    app: vdi-exporter
  ports:
    - port: 80
      name: web
      targetPort: 80
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vdi-exporter
spec:
  selector:
    matchLabels:
      app: vdi-exporter
  serviceName: vdi-exporter
  replicas: 1
  volumeClaimTemplates: []
  template:
    metadata:
      labels:
        app: vdi-exporter
    spec:
      # Co-locate recorder pod and the user's vdi pod on the same node so that the same hostPath is mounted.
      affinity:
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/instance
                    operator: In
                    values: ["{{.FullName}}"]
              topologyKey: kubernetes.io/hostname
      tolerations:
        - key: "app.broker/tier"
          effect: "NoSchedule"
          operator: "Exists"
        - key: "app.broker/node-init"
          effect: "NoSchedule"
          operator: "Exists"
        - key: "nvidia.com/gpu"
          effect: "NoSchedule"
          operator: "Exists"
        - key: "cloud.google.com/gke-accelerator-init"
          effect: "NoSchedule"
          operator: "Exists"
      terminationGracePeriodSeconds: 10
      serviceAccount: {{.FullName}}-vdi-recording-exporter
      volumes:
        - name: recording
          hostPath:
            path: "/tmp/webrtc_recordings/{{.User}}/{{.Timestamp}}"
            type: DirectoryOrCreate
      initContainers:
        - name: ensure-workload-identity
          image: google/cloud-sdk:alpine
          command: ["/bin/bash"]
          args:
            - "-xc"
            - |
              while true; do
                gcloud auth list
                [[ $? -eq 0 ]] && break
                sleep 2
              done
      containers:
        - name: exporter
          image: google/cloud-sdk:alpine
          imagePullPolicy: IfNotPresent
          workingDir: /tmp/recording
          command: ["/bin/bash"]
          args:
            - "-xc"
            - |
              touch /tmp/recording/ready
              while true; do
                if [[ -d /tmp/recording/data ]]; then
                  gsutil -m rsync -C -r /tmp/recording/data/ gs://{{.ProjectID}}-vdi-recordings/{{.User}}/{{.App}}/
                fi
                sleep 5
              done
          env:
            # Add environment vars from brokerappconfig spec.
            {{- range $item := .AppSpec.AppEnv }}
            - name: {{$item.Name}}
              value: "{{$item.Value}}"
            {{- end}}
          volumeMounts:
            - name: recording
              mountPath: /tmp/recording
{{- end}}
{{- end}}