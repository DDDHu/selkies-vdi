# Copyright 2019 Google Inc. All rights reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
kind: Service
metadata:
  name: vdi
spec:
  selector:
    app: vdi
  ports:
    # Port 80 is the default port routed by the pod broker.
    - port: 80
      name: web
      targetPort: 8080
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: vdi
spec:
  selector:
    matchLabels:
      app: vdi
  serviceName: vdi
  replicas: 1
  volumeClaimTemplates: []
  template:
    metadata:
      labels:
        app: vdi
    spec:
      # Disable service account used for accessing the kubernetes API/
      automountServiceAccountToken: false

      # Terminate pod after 10 seconds of receiving SIGTERM
      terminationGracePeriodSeconds: 5
      volumes:
        ###
        # NVIDIA bins and libs from host
        ###
        - name: nvidia
          hostPath:
            path: /home/kubernetes/bin/nvidia
        ###
        # shared x11 socket volume
        ###
        - name: x11
          emptyDir:
            medium: Memory
            sizeLimit: 10Mi
        ###
        # Shared config volume
        ###
        - name: config
          emptyDir:
            medium: Memory
            sizeLimit: 10Mi
        ###
        # shared memory mount
        # used to bypass default container runtime of 64MB
        ###
        - name: dshm
          emptyDir:
            medium: Memory
            sizeLimit: 1Gi
      containers:
        ###
        # Desktop container
        ###
        - name: desktop
          image: gcr.io/cloud-solutions-images/webrtc-gpu-streaming-desktop:latest
          securityContext:
            privileged: false
            runAsUser: 1000
            runAsGroup: 1000
          env:
            - name: LD_LIBRARY_PATH
              value: "/usr/local/nvidia/lib64:/usr/local/nvidia/lib32"
            - name: PULSE_SERVER
              value: "127.0.0.1:4713"
            - name: VDI_STREAMING_STACK
              value: "xpra"
          volumeMounts:
            # Shared pod mount at host for intra-container and cross-pod sharing.
            - name: x11
              mountPath: /tmp/.X11-unix
            # Shared pod mount for intra-container data sharing.
            - name: config
              mountPath: /var/run/appconfig
            # increased shared memory mount
            - name: dshm
              mountPath: /dev/shm
          resources:
            requests:
              cpu: 2
            limits:
              # shared GPU
              nvidia.com/gpu: 1

        ###
        # Pulse audio container
        ###
        - name: pulseaudio
          image: gcr.io/cloud-solutions-images/webrtc-gpu-streaming-pulseaudio:latest
          imagePullPolicy: IfNotPresent
          ports:
            - name: pulseaudio
              containerPort: 4713
              protocol: TCP

        ###
        # Xserver container
        ###
        - name: xserver
          image: gcr.io/cloud-solutions-images/webrtc-gpu-streaming-xserver:latest
          imagePullPolicy: IfNotPresent
          securityContext:
            privileged: false
          volumeMounts:
            - name: x11
              mountPath: /tmp/.X11-unix
            - name: config
              mountPath: /var/run/appconfig
          lifecycle:
            preStop:
              exec:
                command: ["sh", "-c", "kill $(pidof Xorg tail bash)"]
          resources:
            requests:
              cpu: 500m
            limits:
              # shared GPU
              nvidia.com/gpu: 1

        ###
        # Xpra container
        ###
        - name: xpra
          image: gcr.io/cloud-solutions-images/webrtc-gpu-streaming-xpra:latest
          imagePullPolicy: IfNotPresent
          #securityContext:
          #  privileged: false
          #  runAsUser: 1000
          securityContext:
            privileged: true
            runAsUser: 0
          # tty required to gather gpu stats using nvidia-smi and GPUtil python module.
          tty: true
          #command: ["/bin/bash"]
          #args:
          #  - "-exc"
          #  - |
          #    set +x
          #    echo "Waiting for X server"
          #    until [[ -e /var/run/appconfig/xserver_ready ]]; do sleep 1; done
          #    echo "X server is ready"
          #    set -x
          #    sudo LD_LIBRARY_PATH=${LD_LIBRARY_PATH} vulkaninfo >/dev/null
          #    while true; do sleep 1000; done
          env:
            - name: LD_LIBRARY_PATH
              value: "/usr/local/nvidia/lib64:/usr/local/nvidia/cuda/lib64:/usr/local/nvidia/lib32"
            - name: DISPLAY
              value: ":0"
            - name: "PULSE_SERVER"
              value: "127.0.0.1:4713"
            - name: XPRA
              value: "tcp://127.0.0.1:8080"
          volumeMounts:
            - name: x11
              mountPath: /tmp/.X11-unix
            - name: config
              mountPath: /var/run/appconfig
          ports:
            - name: web
              containerPort: 8080
          resources:
            requests:
              cpu: 500m
            limits:
              nvidia.com/gpu: 1
