# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

{{- $persistEnabled := false }}
{{- if .UserParams.enablePersistence}}
  {{- if eq .UserParams.enablePersistence "true"}}
    {{- $persistEnabled = true }}
  {{- end}}
{{- end}}
{{- if .AppParams.enablePersistence}}
  {{- if eq .AppParams.enablePersistence "true"}}
    {{- $persistEnabled = true }}
  {{- end}}
{{- end}}
{{- $dindEnabled := false }}
{{- if .UserParams.enableDind }}
  {{- if eq .UserParams.enableDind "true"}}
    {{- $dindEnabled = true }}
  {{- end}}
{{- end}}
{{- if .AppParams.enableDind }}
  {{- if eq .AppParams.enableDind "true"}}
    {{- $dindEnabled = true }}
  {{- end}}
{{- end}}

{{- $persistStorageMountPath := default "/home/coder" .AppParams.persistStorageMountPath }}
{{- $dindPersistSubPath := default "var/lib/docker" .AppParams.dindPersistSubPath }}

###
# Copy limits from spec so that docker container matches limits of desktop container.
# Requests is not matched to avoid doubling of the requested resources.
###
{{- $hasLimits := false }}
{{- $hasLimitsCPU := false }}
{{- $hasLimitsMemory := false }}
{{- if .NodeTier.Resources.Limits }}
  {{- $hasLimits = true }}
  {{- if .NodeTier.Resources.Limits.CPU }}{{- $hasLimitsCPU = true }}{{- end}}
  {{- if .NodeTier.Resources.Limits.Memory }}{{- $hasLimitsMemory = true }}{{- end}}
{{- end}}

###
# Using Filestore or NFS is not supported with dind.
# Not only is NFS too slow, but the rootless version of dind is also not compatible with the NFS filesystem.
# See also: https://docs.docker.com/engine/security/rootless/#docker-pull-errors
###
{{- $persistFilestore := false}}
{{- if .AppParams.persistStorageClass }}
  {{- if contains "filestore" .AppParams.persistStorageClass }}
    {{- $persistFilestore = true }}
  {{- end}}
{{- end}}

{{- $dindVolumeName := "persist" }}
{{- $dindPDEnabled := false }}
{{- $dindPDStorageClass := default "pd-standard" .AppParams.dindPDStorageClass }}
{{- $dindPDStorageSize := default "10Gi" .AppParams.dindPDStorageSize }}
{{- if .AppParams.enableDindPD }}
  {{- if eq .AppParams.enableDindPD "true" }}
    {{- $dindVolumeName = "persist-dind-pd" }}
    {{- $dindPDEnabled = true }}
  {{- end}}
{{- end}}

{{- if $dindPDEnabled }}
###
# Add dedicated PD volume for docker-in-docker
###
- op: add
  path: "/spec/volumeClaimTemplates/-"
  value:
    metadata:
      name: {{$dindVolumeName}}
      annotations:
        gke.accel.vdi/user: "{{.User}}"
      labels:
        app.broker/deletion-policy: "abandon"
    spec:
      accessModes: ["ReadWriteOnce"]
      storageClassName: {{ $dindPDStorageClass | quote }}
      volumeName: {{ default "" .AppParams.dindPDVolumeName | quote }}
      resources:
        requests:
          storage: {{ $dindPDStorageSize }}
{{- end}}

{{- if or (and (and $persistEnabled $dindEnabled) (not $persistFilestore)) (and ($dindPDEnabled) ($dindEnabled)) }}
###
# Add shared volume for docker-certs
# Inserting as first element to deconflict other patches that append.
# See also: https://github.com/kubernetes-sigs/kustomize/issues/642
###
- op: add
  path: "/spec/template/spec/volumes/0"
  value:
    name: docker-certs
    emptyDir:
      sizeLimit: 128Mi

###
# Add shared volumeMount for docker certs
###
- op: add
  path: "/spec/template/spec/containers/0/volumeMounts/0"
  value:
    name: docker-certs
    mountPath: /var/run/docker-certs
    subPath: client

###
# Add docker environment variables to desktop container
###
- op: add
  path: "/spec/template/spec/containers/0/env/-"
  value:
    name: DOCKER_TLS
    value: "true"
- op: add
  path: "/spec/template/spec/containers/0/env/-"
  value:
    name: DOCKER_CERT_PATH
    value: "/var/run/docker-certs"
###
# NOTE: the cloudshell base image bashrc overrides the DOCKER_HOST variable.
# This is here for images not based on cloudshell or that bypass the .bashrc
# For containers based on cloudshell, the persist initContainer adds the DOCKER_HOST variable to the .bashrc
###
- op: add
  path: "/spec/template/spec/containers/0/env/-"
  value:
    name: DOCKER_HOST
    value: "tcp://127.0.0.1:2376"
- op: add
  path: "/spec/template/spec/containers/0/env/-"
  value:
    name: USE_DIND
    value: "true"

###
# Add Docker-in-Docker persistent data init container
# TODO: Rootless performance is currently very slow, so this is disabled for now.
###
#- op: add
#  path: "/spec/template/spec/initContainers/-"
#  value:
#    name: dind-persist-init
#    securityContext:
#      runAsUser: 0
#    image: docker:20.10-dind-rootless
#    command: ["/bin/sh"]
#    args:
#     - -exc
#     - |
#        if [[ ! -e /mnt/docker/.dind-persist-init ]]; then
#          echo "INFO: initializing data-root persistent directory"
#          touch /mnt/docker/.dind-persist-init
#          chown -R 1000:1000 /mnt/docker
#        else
#          echo "INFO: data-root persist init already complete."
#        fi
#    volumeMounts:
#      - name: {{$dindVolumeName}}
#        # NOTE: When using the 'rootless' dind image, data is stored to /home/rootless/.local/share/docker
#        mountPath: /mnt/docker
#        subPath: {{$dindPersistSubPath}}

###
# Add Docker-in-Docker container
###
- op: add
  path: "/spec/template/spec/containers/-"
  value:
    name: dind
    securityContext:
      privileged: true
    image: docker:20.10-dind

    # Move the Docker data dir to the volume mount.
    args: ["--data-root", "/mnt/docker"]

    env:
      - name: DOCKER_TLS_CERTDIR
        value: /var/lib/docker-certs
    ports:
      - name: docker
        containerPort: 2375
        protocol: TCP
    volumeMounts:
      ###
      # Certs volume shared with desktop container
      ###
      - name: docker-certs
        mountPath: /var/lib/docker-certs
      ###
      # Docker data volume
      ###
      - name: {{$dindVolumeName}}
        mountPath: /mnt/docker
        subPath: {{$dindPersistSubPath}}
      ###
      # User home directory shared with dind container
      ###
      - name: persist
        mountPath: {{$persistStorageMountPath}}
    resources:
      limits:
        {{- if $hasLimitsCPU }}
        cpu: {{.NodeTier.Resources.Limits.CPU}}
        {{- end}}
        {{- if $hasLimitsMemory }}
        memory: {{.NodeTier.Resources.Limits.Memory}}
        {{- end}}
        # If storage outside of the user dind containers is exceeded, the pod will be evicted. This is to protect the node disk.
        ephemeral-storage: 1Gi
      requests:
        cpu: "1m"
        memory: 1Mi
{{- else}}
# Cannot have empty patch, so this is effectively a no-op.
- op: test
  path: /spec/template/spec/containers/0/name
  value: desktop
{{- end}}